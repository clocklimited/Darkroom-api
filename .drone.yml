kind: pipeline
name: default

steps:
  - name: restore-cache
    image: drillster/drone-volume-cache
    settings:
      restore: true
      cache_key: [DRONE_REPO_OWNER, DRONE_REPO_NAME, DRONE_BRANCH]
      mount:
        - .eslintcache
        - node_modules
        - /drone/babel-cache.json
        - /drone/yarn-cache
    volumes:
      - name: cache
        path: /cache
    when:
      event:
        - push

  - name: install
    image: node:14.16.1-alpine
    depends_on:
      - restore-cache
    commands:
      - apk add --update zeromq-dev python build-base git
      - yarn install --silent --no-emoji --prefer-offline
    when:
      event:
        - push

  - name: test
    image: node:14.16.1-alpine
    depends_on:
      - install
    commands:
      - yarn run test
    when:
      event:
        - push

  - name: rebuild-cache
    image: drillster/drone-volume-cache
    depends_on:
      - test
    settings:
      rebuild: true
      cache_key: [DRONE_REPO_OWNER, DRONE_REPO_NAME, DRONE_BRANCH]
      mount:
        - .eslintcache
        - node_modules
        - /drone/yarn-cache
    volumes:
      - name: cache
        path: /cache
    when:
      event:
        - push

  - name: notify
    image: plugins/slack
    depends_on:
      - rebuild-cache
    settings:
      channel: darkroom-coders
      username: drone
      webhook:
        from_secret: slack_webhook
    when:
      status:
        - success
        - failure

volumes:
  - name: cache
    host:
      path: /var/cache/drone
  - name: docker
    host:
      path: /var/run/docker.sock

services:
  - name: mongo
    image: mongo:3.4
    command: ['--smallfiles']
    when:
      event:
        - push

trigger:
  event:
    exclude:
      - pull_request

---
kind: secret
name: slack_webhook
get:
  name: slackWebhook
