pipeline:
  create-build-image:
    image: docker
    group: preinstall
    commands:
      - docker build --target build -t ${DRONE_REPO,,}:${DRONE_BUILD_NUMBER} .
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  prepare:
    image: microadam/graphicsmagick-alpine:1.3.28
    group: preinstall
    commands:
      - cp /usr/bin/gm /drone/
      - cp -R /usr/lib /drone/lib

  install:
    image: "${DRONE_REPO,,}:${DRONE_BUILD_NUMBER}"
    commands:
      - yarn install --silent --no-emoji --prefer-offline
    when:
      event: push

  test:
    image: "${DRONE_REPO,,}:${DRONE_BUILD_NUMBER}"
    environment:
      - MONGO_URL=mongodb://mongo:27017/test
    commands:
      - cp /drone/gm /usr/bin/
      - cp -R /drone/lib/* /usr/lib/
      - yarn test

  compile-app:
    image: "${DRONE_REPO,,}:${DRONE_BUILD_NUMBER}"
    environment:
      - PKG_CACHE_PATH=/drone/pkg-cache
    commands:
      - mv locations.js.env locations.js
      - pkg -t host app.js -o darkoom

  publish-release-image:
    image: docker
    commands:
      - echo "$GOOGLE_CREDENTIALS" | docker login -u _json_key --password-stdin https://eu.gcr.io
      - docker build --target release -t eu.gcr.io/test-k8s-1289/darkroom:${DRONE_COMMIT_SHA} .
      - docker push eu.gcr.io/test-k8s-1289/darkroom:${DRONE_COMMIT_SHA}
      - docker rmi eu.gcr.io/test-k8s-1289/darkroom:${DRONE_COMMIT_SHA}
    secrets: [ google_credentials ]
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  delete-previous-build-image:
    image: docker
    commands:
      - docker rmi -f ${DRONE_REPO,,}:${DRONE_PREV_BUILD_NUMBER}
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    when:
      status: [ success, failure ]

  notify:
    image: plugins/slack
    channel: adam-test
    username: drone
    secrets: [ slack_webhook ]
    when:
      status: [ success, failure ]

services:
  mongo:
    image: mongo:3.4
    command: [ "--smallfiles" ]
    when:
      event: push
